{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","userName","setUsername","_useState5","_useState6","followers","setFollowers","_useState7","_useState8","following","setFollowing","_useState9","_useState10","repos","setRepos","_useState11","_useState12","avatar","setAvatar","_useState13","_useState14","userInput","setUserInput","_useState15","_useState16","useEffect","fetch","then","res","json","data","setData","_ref","login","public_repos","avatar_url","react_default","a","createElement","className","Form","onSubmit","concat","Group","Input","placeholder","onChange","e","target","value","Button","content","Card","Image","src","wrapped","ui","Content","Header","extra","Icon","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.767afd1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, {useState,useEffect} from 'react';\nimport { Form, Card, Image, Icon } from 'semantic-ui-react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [userName, setUsername] = useState('');\n  const [followers,setFollowers] = useState('');\n  const [following, setFollowing] = useState('');\n  const [repos, setRepos] = useState('');\n  const [avatar,setAvatar] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.github.com/users/zhengzhe46')\n      .then((res) => res.json())\n      .then(data => {\n        setData(data);\n      });\n  },[]);\n\n  const setData = ({name, login, followers, following, public_repos, avatar_url}) => {\n    setName(name);\n    setUsername(login);\n    setFollowers(followers);\n    setFollowing(following);\n    setRepos(public_repos);\n    setAvatar(avatar_url);\n  };\n\n  const handleSearch = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    fetch(`https://api.github.com/users/${userInput}`)\n      .then((res)  => res.json())\n      .then(data => {\n        setData(data);\n      });\n  };\n\n  return (\n    <div >\n      <div className='navbar'>Github Search</div>\n      <div className='search'>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Input\n              placeholder='Github user'\n              name='github user'\n              onChange={handleSearch}\n            />\n            <Form.Button content='查詢' />\n          </Form.Group>\n        </Form>\n      </div>\n      <dic className=\"card\">\n        <Card>\n          <Image src={avatar} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{name}</Card.Header>\n            <Card.Header>{userName}</Card.Header>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {followers} Followers\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {repos} Repos\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {following} Following\n            </a>\n          </Card.Content>\n        </Card>\n      </dic>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}