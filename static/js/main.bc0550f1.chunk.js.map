{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","userName","setUsername","_useState5","_useState6","followers","setFollowers","_useState7","_useState8","following","setFollowing","_useState9","_useState10","repos","setRepos","_useState11","_useState12","avatar","setAvatar","_useState13","_useState14","userInput","setUserInput","_useState15","_useState16","repoData","setRepoData","_useState17","_useState18","error","setError","useEffect","fetch","then","res","json","data","setData","_ref","login","public_repos","avatar_url","_repoDataURL","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","concat","result","console","log","list","map","item","react_default","createElement","className","List","divided","relaxed","Item","Icon","size","verticalAlign","Content","Header","as","href","svn_url","Description","created_at","stop","apply","this","arguments","Image","circular","src","Form","onSubmit","message","Group","Input","placeholder","onChange","e","target","value","Button","content","Message","negative","Card","wrapped","ui","extra","variant","onClick","Segment","style","height","overflowY","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bc0550f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, {useState,useEffect} from 'react';\nimport { Form, Card, Image, Icon, Header, List, Message, Button, Grid, Segment} from 'semantic-ui-react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [userName, setUsername] = useState('');\n  const [followers,setFollowers] = useState('');\n  const [following, setFollowing] = useState('');\n  const [repos, setRepos] = useState('');\n  const [avatar,setAvatar] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [repoData, setRepoData] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.github.com/users/zhengzhe46')\n      .then((res) => res.json())\n      .then(data => {\n        setData(data);\n      });\n  },[]);\n\n  const setData = ({name, login, followers, following, public_repos, avatar_url}) => {\n    setName(name);\n    setUsername(login);\n    setFollowers(followers);\n    setFollowing(following);\n    setRepos(public_repos);\n    setAvatar(avatar_url);\n  };\n\n  const handleSearch = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    fetch(`https://api.github.com/users/${userInput}`)\n      .then((res)  => res.json())\n      .then(data => {\n        if(data.message){\n          setError(data.message);\n        }\n        else{\n          setData(data);\n          setError(null);\n        }\n      });\n  };\n  \n  async function repoDataURL(){\n    await fetch(`https://api.github.com/users/${userName}/repos`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(36,result);\n          const list=result.map((item) => (\n            <div className=\"repo\">\n\n                \n                  <List divided relaxed>\n                      <List.Item>\n                        <List.Icon name='github' size='large' verticalAlign='middle' />\n                        <List.Content>\n                          <List.Header as='a' href={item.svn_url}>{item.name}</List.Header>\n                          <List.Description as='a'>{item.created_at}</List.Description>\n                        </List.Content>\n                      </List.Item>\n                  </List>\n\n            </div>\n          ));\n          setRepoData(list);\n        },\n        (error) => {\n          console.log(error);\n\n        }\n      );\n  }\n\n  \n  \n\n\n  return (\n    <div>\n      <div className='navbar'>\n        <Header as='h2'>\n          <Image circular src={avatar} />{userName}\n        </Header>\n      </div>\n      <div className='search'>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Input\n              placeholder='Github user'\n              name='github user'\n              onChange={handleSearch}\n            />\n            <Form.Button content='查詢' />\n          </Form.Group>\n        </Form>\n      </div>\n      { error ?(<div className=\"error\">\n        <Message negative>\n          <Message.Header><h1>無用戶資訊</h1></Message.Header>\n          <p>(請您輸入正確用戶賬號)</p>\n        </Message>\n      </div>\n      ):(<dic className=\"card\">\n        <Card>\n          <Image src={avatar} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{name}</Card.Header>\n            <Card.Header>{userName}</Card.Header>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {followers} 追隨者(Followers)\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {repos} 倉儲(Repos)\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {following} 關注者(Following)\n            </a>\n          </Card.Content>\n          <Button variant=\"primary\" onClick={repoDataURL}>Click Here</Button>\n          \n        </Card> \n    \n      </dic>)}\n      <div className='inputid'>\n      <Card>     \n          <Segment>\n            <pre style={{ height: 150, overflowY: 'scroll' }}>\n            {repoData}\n            </pre>\n          </Segment>\n      </Card> \n      </div>\n     \n\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}