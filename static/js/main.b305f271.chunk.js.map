{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_useState","useState","_useState2","Object","slicedToArray","name","_useState3","_useState4","userName","_useState5","_useState6","followers","_useState7","_useState8","following","_useState9","_useState10","repos","_useState11","_useState12","avatar","_useState13","_useState14","_useState15","_useState16","useEffect","fetch","then","res","json","data","console","log","react_default","a","createElement","className","Form","Group","Input","placeholder","Button","content","Card","Image","src","wrapped","ui","Content","Header","extra","Icon","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b305f271.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, {useState,useEffect} from 'react';\nimport { Form, Card, Image, Icon } from 'semantic-ui-react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [userName, setUsername] = useState('');\n  const [followers,setFollowers] = useState('');\n  const [following, setFollowing] = useState('');\n  const [repos, setRepos] = useState('');\n  const [avatar,setAvatar] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n\n    fetch(\"https://api.github.com/users/zhengzhe46\")\n      .then(res => res.json())\n      .then(data =>{\n        console.log(data);\n      })\n  },[])\n\n  const setData = ({name, login, followers, following, public_repos, avatar_url}) => {\n    setName(name);\n    setUsername(login);\n    setFollowers(followers);\n    setFollowing(following);\n    setRepos(public_repos);\n    setAvatar(avatar_url);\n  }\n\n\n  return (\n    <div >\n      <div className='navbar'>Github Search</div>\n      <div className='search'>\n        <Form>\n          <Form.Group>\n            <Form.Input\n              placeholder='Github user'\n              name='github user'\n            />\n            <Form.Button content='查詢' />\n          </Form.Group>\n        </Form>\n      </div>\n      <dic className=\"card\">\n        <Card>\n          <Image src={avatar} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{name}</Card.Header>\n            <Card.Header>{userName}</Card.Header>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {followers} Followers\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {repos} Repos\n            </a>\n          </Card.Content>\n          <Card.Content extra>\n            <a>\n              <Icon name='user' />\n              {following} Following\n            </a>\n          </Card.Content>\n        </Card>\n      </dic>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}